---
- name: Setup pidev
  hosts: itmg77-pi4
  tags:
  - lab
  roles:
  - role: setup-raspbee
    become: yes
  tasks:
  - name: Find out whoami
    local_action: ansible.builtin.command whoami
    register: poweruser
  - name: "Create user accounts"
    become: yes
    user:
      name: '{{ poweruser["stdout"] }}'
      groups: "sudo,docker,root,dialout"
  - name: "Create user accounts"
    become: yes
    user:
      name: ansible
      groups: "sudo,docker,root,dialout"
  - name: "Add authorized keys"
    become: yes
    authorized_key:
      user: '{{ poweruser["stdout"] }}'
      state: present
      key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  - name: Make user {{ poweruser["stdout"] }} passwordless for sudo
    become: yes
    copy:
      dest: /etc/sudoers.d/010_{{ poweruser["stdout"] }}-nopasswd
      content: '{{ poweruser["stdout"] }} ALL=(ALL) NOPASSWD: ALL'
      owner: root
      group: root
      mode: '0440'
  - name: ensures /home/{{ poweruser["stdout"] }}/compose dir exists
    become: yes
    file: 
      path: /home/{{ poweruser["stdout"] }}/compose
      state: directory
      owner: '{{ poweruser["stdout"] }}'
      group: '{{ poweruser["stdout"] }}'
      recurse: yes
  - name: Send compose.yml
    become: yes
    template:
      dest: /home/{{ poweruser["stdout"] }}/compose/docker-compose.yml
      src: files/compose.yml.j2
      owner: '{{ poweruser["stdout"] }}'
      group: ansible
      mode: '0440'
  - name: Flush handlers
    meta: flush_handlers
  - name: Start services with docker compose
    community.docker.docker_compose_v2:
      project_src: /home/{{ poweruser["stdout"] }}/compose
      state: present
  - name: Obtain info
    command:
      argv: 
      - cat
      - /etc/os-release
    when: ansible_distribution == "Debian"
  - name: check if device exist
    file:
      path: /dev/ttyAMA0